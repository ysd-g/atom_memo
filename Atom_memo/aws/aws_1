# aws_1

仮想マシンをAWSのクラウド環境に作成する

### EC2（Elastic Compute Cloud）とは
- __EC2はクラウド環境で動作する仮想マシンを提供するサービス__<br>
- EC2インスタンスの起動時だけ，課金される<br>
- リージョン(東京，...) > VPC > EC2となっており，東京には4つのデータセンタがある<br>
これをアベイラビリティゾーンという<br>
- 東京リージョンは，"ap-northeast-1a~1d" まで存在する<br>
- 複数のEC2インスタンスを使用する場合には，傷害に備えて，別々のアベイラビリティゾーンを使うのが一般的<br>
<br>
- __VPCは，AWSユーザのプライベートなネットワーク環境を作成するために使用する__<br>
- __EC2インスタンスを生成する際は，どのVPCに配置するかを指定する必要がある__<br>
__（基本的には，新たなサーバ環境を作成する際は，新たにVPCを用意する）__<br>
<br>
- エンドユーザは，ブラウザで対象のURLにアクセスすると，URLに対応するロードバランサにHTTPリクエストが送信される<br>
- ロードバランサでは，リクエストをバラバラに，EC2インスタンスに送信する<br>

### インスタンスタイプとは
- インスタンスのスペックを指す<br>
- 無料で使用できるのは，t1.micro，t2.microと呼ばれるもの<br>
- [awsオンデマンドインスタンス料金表](https://aws.amazon.com/jp/ec2/pricing/on-demand/)を参考<br>

- __vCPU：仮想CPUの数__<br>
- __メモリ(GiB)：内部メモリの容量__<br>
- __ECU（EC2 Compute Unit）：インスタンスの処理性能を表した数字__<br>
__1ECUあたり，1.0~1.2GHz 2007 Opteron，または2007Xeonプロセッサと同等のCPU__<br>
__ECU ÷ vCPUが1つの仮想CPUあたりの処理性能を表す__<br>
<br>
- __vCPUが少なく，ECUが多い場合：仮想CPU1個あたりの処理性能が高いので，個々のCPUで重い処理を指せる場合に有効__<br>
- __vCPUが多い場合，並列処理に向いており，個々のvCPUの処理性能は，ECU次第である．個々のCPUで処理する内容が軽い場合には，それほどECUは必要ない__<br>
<br>
- __ECUに"変数"と記載されている場合，"バーストパフォーマンスインスタンス"である__<br>
- __CPUの使用率に応じて処理性能が変動する特殊なインスタンス__<br>
- __t2，t3__ ファミリーがそれに該当する<br>
- バーストパフォーマンスインスタンスを理解する上で，__"ベースラインパフォーマンス"__，__"CPUクレジット"__ が大切になる<br>
<br>

### ベースラインパフォーマンスとは
- 通常時に利用できるCPU処理性能を表すもの<br>
- __2.5GHz Intel XeonのCPUをベースにして，CPUの何%の処理性能を利用できるかを表したもの__<br>
- [t3ファミリーのインスタンスタイプのベースラインパフォーマンス](https://aws.amazon.com/jp/ec2/instance-types/t3/)<br>
- t3.nanoの場合，2.5GHz Intel Xeonの __わずか5%のパフォーマンスしか利用できない__<br>
- t3.nanoは，__vCPUが2つ備わっているため，2つ合わせて，10%のパフォーマンスとなる__<br>
- これだけでは，処理を全うすることはほとんどできないが，t2・t3インスタンスには，__バースト__ という機能が備わっている<br>
- __バーストとは，一時的にベースラインパフォーマンスを超えてCPU性能を100%利用できる機能である__ <br>
- __CPUクレジットは，バーストをするために必要なコインのようなもので，CPU負荷がベースラインパフォーマンスを超えたら，自動的に投入されてリミットが開放される__<br>
- __1クレジットあたり，1分間バーストすることができる___<br>
- __インスタンスごとに，初期値となるクレジットは決まっているが，1時間ごとに決まったクレジット数が付与される__<br>
<br>

### AMI（Amazon Machine Image）とは
- __EC2インスタンスを立ち上げる際に選択する，OSやソフトウェア構成のテンプレートのこと__<br>
__（例えば，Linuxサーバを選択すると，Linuxとそれに付属するソフトウェアがインストールされたインスタンスが立ち上がる）__<br>
- AMIでは，__ルートデバイスタイプ__ を __インスタンスストア__ と __EBS__ 2つから選ぶことができる<br>
- __[ コンソール ＞ インスタンスの作成 ＞ コミュニティAMI ＞ ルートデバイスタイプ ＞ インスタンスストア ]__ を選択することで，__インスタンスストア__ を利用できる<br>
- __インスタンスストアとEBSの違い：データの格納場所が違う<br>
インスタンスストアの場合，インスタンスの停止によって，インスタンスストア上のデータは消える（キャッシュ）<br>
EBSの場合，インスタンスを停止・削除しても，データは消えない__<br>
- __EBSの種類は，gc2，io1，standardの3つがある__<br>
- __gc2：一般のサーバで使うような場合に適している__<br>
- __io1：データベースサーバで使用する際に適している__<br>
- __standard：旧世代のもので，一般的にはおすすめしていない__<br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- t3.nanoの場合，vCPU：2，メモリ：0.5GiB，1h料金：0.0068ドル（安価），1month（full）： 約580円<br>
- t3.2xlargeの場合，vCPU：8，メモリ：32GiB，1h料金：0.4352ドル（高価），1month（full）： 約3万7千円<br>

- 高速性能を求めるなら，"コンピューティング最適化"や，"高速コンピューティング"から選択<br>
- 普通に使いたいなら，"汎用"から選択<br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>
- <br>


Type on the __left__, see it _rendered_ on the __right__.

This is a
[link](https://github.com).


- and this is
- a list

~~yoshida~~

yoshida<br>kensuke


:tada: :fireworks:

### こんな感じで数式も入れることができる( _Latex_ )に従う

$\Delta{y}$

$$W = I \bullet V$$

```python:
a = a + b
```

## 参考文献
- [atomをMarkdownエディタように設定作り込んでみた](https://qiita.com/yuki476/items/f81f6c03f9e9b00cfacc)
- [チートシート](https://qiita.com/Qiita/items/c686397e4a0f4f11683d)
